package packagee14_BinaryTrees;

import packagee14_BinaryTrees.A1_Uni_Valued_or_not.Node;

public class A2_Mirror_of_Tree {
	
	static class Node {
		int data;
		Node left;
		Node right;

		public Node(int data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}
	
	public static void invertBinaryTree(Node root) {
		
		if(root == null) {
			return;
		}
		
		Node temp = root.left;
		root.left = root.right;
		root.right = temp;
		
		invertBinaryTree(root.left);
		invertBinaryTree(root.right);
		
	}
	
	public static void preOrderTraversal(Node root) {
		
		preOrderTraversal(root.left);
		System.out.println(root.data);
		preOrderTraversal(root.right);
		
	}
	

	public static void main(String[] args) {
		
		Node root = new Node(1);
        root.left = new Node(2);
        root.right = new Node(3);
        root.left.left = new Node(4);
        root.left.right = new Node(5);
        root.right.left = new Node(6);
        root.right.right = new Node(7);

	}

}
