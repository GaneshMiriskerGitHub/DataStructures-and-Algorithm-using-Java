package packagee19_dynamic_programming;

public class P5_Target_Sum_Subset {
	
	private static int targetSumExists(int[] nums, int target, int i) {
		if(i==0 || target == 0) {
			return 0;
		}
		
		if(nums[i] < target) {
			int inc = nums[i] + targetSumExists(nums, target-nums[i], i-1);
			int exc = targetSumExists(nums, target, i-1);
			return Math.max(inc, exc);
		}else {
			int exc = targetSumExists(nums, target, i-1);
			return exc;
		}
	}
	
	

	public static void main(String[] args) {
		
		int[] nums = {4,2,7,1,3};
		int target = 10;
		
		// Recursion
		System.out.println(targetSumExists(nums, target, nums.length-1));

	}

}
