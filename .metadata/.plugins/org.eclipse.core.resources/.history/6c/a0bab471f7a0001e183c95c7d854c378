package Type3_Unbounded_Knapsack;

import java.util.Arrays;

public class Tester {
	
	public static int maxValue(int[] coins, int sum) {
		
		int[][] dp = new int[coins.length+1][sum+1];
		
		for(int i=0;i<dp.length;i++) {
			dp[i][0] = 1;
		}
		
		for (int i = 1; i < dp.length; i++) {
			for (int j = 1; j < dp[i].length; j++) {
				if(coins[i-1] <= j) {
					int include = coins[i-1] + dp[i][j-coins[i-1]];
					int exclude = dp[i-1][j];
					dp[i][j] = Math.max(include, exclude);
				}else {
					int exclude = dp[i-1][j];
					dp[i][j] = exclude;
				}
			}
		}
		
		return dp[coins.length][sum];
		
	}

	public static void main(String[] args) {
	
		int n = 00000000000000000000000000001011;
		String str = n+"";
		
		int count = 0;

        for(int i=0;i<str.length();i++) {
            if(str.charAt(i) == '1') {
                count++;
            }
        }

        System.out.println(count);
        
        
	}

}
