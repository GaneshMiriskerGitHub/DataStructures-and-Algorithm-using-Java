package packagee12_Queue;

public class P3_Implemetation_of_Queue_using_LinkedList {
	
	static class Node {
		int data;
		Node next;
		
		public Node(int data) {
			this.data = data;
			this.next = null;
		}
	}
	
	static class Queue {
		
		static Node head;
		static Node tail;
		
		
		public static boolean isEmpty() {
			return head == null && tail == null;
		}
		
		public static void add(int data) {
			
			if(rear == size-1) {
				System.out.println("Queue is full");
				return;
			}
			
			rear += 1;
			arr[rear] = data;
		}
		
		public static int remove(int data) {
			
			if(isEmpty()) {
				System.out.println("Queue is empty");
				return -1;
			}
			
			int front = arr[0];
			for(int i=0;i<size;i++) {
				arr[i] = arr[i+1];
			}
			return front;
			
		}
		
		public static int peek() {
			
			if(isEmpty()) {
				System.out.println("Queue is empty");
				return -1;
			}
			
			return arr[0];
			
		}
		
	}

	public static void main(String[] args) {
		
		

	}

}
