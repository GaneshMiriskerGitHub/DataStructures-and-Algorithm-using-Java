package package5_BackTracking;



public class PP17_Maximum_Number_with_K_swaps { 
	
	static String max_number ;

	public static void findMaximumNumber(String str, int k) {
		
		if(Integer.parseInt(max_number) < Integer.parseInt(str)) {
			max_number = str;
			return;
		}
		
		if(k == 0) {
			return;
		}
		
		
		for(int i=0;i<str.length();i++) {
			for(int j=i+1;j<str.length();j++) {
				if(str.charAt(i) < str.charAt(j)) {
					str = swap(str, i, j);
					findMaximumNumber(str, k-1);
					str = swap(str, i, j);
				}
			}
		}
		
	}
	
	public static String swap(String str, int i, int j) {
		
		char ith = str.charAt(i);
		char jth = str.charAt(j);
		
		String left = str.substring(0, i);
		String middle = str.substring(i+1, j);
		String right = str.substring(j+1);
		
		return left + jth + middle + ith + right;
		
	}
	
	public static void main(String[] args) {
		
		int M = 1234;
		int k = 3;
		
		findMaximumNumber("4551711527", k);
		
		System.out.println(max_number);

	}

}
