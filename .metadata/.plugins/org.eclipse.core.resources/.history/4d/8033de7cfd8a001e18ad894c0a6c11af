package packagee18_Graphs;

import java.util.ArrayList;
import java.util.PriorityQueue;

public class Tester {

	public static void union_(int a, int b, int par[], int rank[])
    {
        // add your code here
        int parA = findParent(a);
        int parB = findParent(b);
        
        if(rank[a] == rank[b]) {
            par[b] = parA;
            rank[a]++;
        }else if(rank[a] > rank[b]) {
            par[b] = parA;
        }else {
            par[b] = parB;
        }
    }

    //Function to check whether 2 nodes are connected or not.
    public static Boolean isConnected(int a, int b, int par[], int rank[])
    {
        // add your code here
        int parA = findParent(a);
        int parB = findParent(b);
        
        if(parA == parB) {
            return true;
        }
    }
    
    public static int findParent(int[] arr, int x) {
        if(arr[x] == x) return x;
        return findParent(arr, arr[x]);
    }
	
	public static void main(String[] args) {
		
		

	}

}
