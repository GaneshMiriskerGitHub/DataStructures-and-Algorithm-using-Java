package Type2_0_1_KnapSack;

import java.util.Arrays;

public class Tester {
	
	static Boolean isSubsetSum(int N, int arr[], int sum){
        // code here
        
        boolean[][] memo = new boolean[arr.length + 1][sum + 1];
        return subSetMemoization(arr, sum, arr.length, memo);
    }
    
    public static boolean subSetMemoization(int[] arr, int target, int n, boolean[][] memo) {

		if (target == 0) {
			return true;
		}
		if (target < 0) {
			return false;
		}
		if (n == 0) { // because below we are saying n-1 so 0-1 won't pass below
			return false;
		}
		
		if(memo[n][target] != false) {
			return memo[n][target];
		}

		if (arr[n - 1] <= target) {
			boolean include = subSetRecusrion(arr, target - arr[n - 1], n - 1);
			boolean exclude = subSetRecusrion(arr, target, n - 1);
			memo[n][target] =  include || exclude;
			return memo[n][target];
		} else {
			boolean exclude = subSetRecusrion(arr, target, n - 1);
			memo[n][target] = exclude;
			return memo[n][target];
		}

	}

	public static void main(String[] args) {
		
		

	}
}
