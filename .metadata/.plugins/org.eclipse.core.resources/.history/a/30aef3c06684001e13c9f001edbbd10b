package packagee13_Greedy;

import java.util.Arrays;

public class Tester {

	static int[] alphabetValues = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
			24, 25, 26 };

	static void lexoSmall(int N, int K) {
        if (N > alphabetValues.length) {
            System.out.println("Error: N is greater than the length of the alphabetValues array.");
            return;
        }

        // Sort the alphabetValues array in ascending order
        Arrays.sort(alphabetValues);

        // Initialize the result array
        int[] result = new int[N];

        // Initialize the current sum
        int currentSum = 0;

        // Iterate over the sorted alphabetValues array in ascending order
        for (int i = 0; i < N - 1; i++) {
            // Add the smallest values to the result array
            result[i] = alphabetValues[0];

            // Update the current sum
            currentSum += alphabetValues[0];
        }

        // Add the remaining values to meet the required sum
        result[N - 1] = K - currentSum;

        // Output the result array
        System.out.println("Lexicographically smallest sequence: " + Arrays.toString(result));
    }

	public static void main(String[] args) {

		// Input
		int N = 5;
		int K = 42;

		lexoSmall(N, K);

	}

}
