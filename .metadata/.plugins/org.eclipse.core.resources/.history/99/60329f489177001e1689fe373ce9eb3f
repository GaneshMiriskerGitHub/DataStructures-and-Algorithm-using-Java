package package5_BackTracking;

import java.util.ArrayList;
import java.util.HashSet;

public class PP15_Hamilton_Cycle { // Graph

	public static boolean check(int N, int M, ArrayList<ArrayList<Integer>> Edges) {
		
		
		
	}
	
	public static void hamiltonPath(ArrayList<ArrayList<Integer>> Edges, int src, HashSet<Integer> visited, String pathSoFar, int OriginalSrc) {
		
	}

	public static void main(String[] args) {

		int N = 4;
		int M = 4;
		int[][] Edges = { { 1, 2 }, { 2, 3 }, { 3, 4 }, { 2, 4 } };

		// [][][][][][][]....

		ArrayList<ArrayList<Integer>> listOFList = new ArrayList<>();

		for (int i = 0; i < Edges.length; i++) {
			ArrayList<Integer>  list =  new ArrayList<>();
			for (int j = 0; j < Edges[0].length; j++) {
				list.add(Edges[i][j]);
			}
			listOFList.add(list);
		}

		boolean checkHamilton = check(N, M, listOFList);

	}

}
