package packagee18_Graphs;

import java.util.ArrayList;
import java.util.Arrays;

public class P8_Bipartie_Graph {
	
	static class Edge {
		int src;
		int des;

		public Edge(int src, int des) {
			this.src = src;
			this.des = des;
		}
	}
	
	public static void createGraph(ArrayList<Edge>[] graph) {
		for (int i = 0; i < graph.length; i++) {
			graph[i] = new ArrayList<>();
		}
		
		graph[0].add(new Edge(0, 1));
		graph[0].add(new Edge(0, 2));
		
		graph[1].add(new Edge(1, 0));
		graph[1].add(new Edge(1, 3));
		
		graph[2].add(new Edge(2, 0));
		graph[2].add(new Edge(2, 4));
		
		graph[3].add(new Edge(3, 1));
		graph[3].add(new Edge(3, 4));
		
		graph[4].add(new Edge(4, 2));
		graph[4].add(new Edge(4, 3));
		
	}
	
	public static boolean isBipartite(ArrayList<Edge>[] graph) {
		
		// initialize col[] with -1
		int col[] = new int[graph.length];
		Arrays.fill(col, -1);
		
		
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
