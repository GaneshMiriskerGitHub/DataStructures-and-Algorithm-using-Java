package package2_strings;

import java.util.HashMap;
import java.util.Map;

public class Tester {

	public static String smallestWindow(String s, String p) {
		if (p == "") {
			return "";
		}
		// Your code here
		Map<Character, Integer> pMap = new HashMap<>();
		for (int i = 0; i < p.length(); i++) {
			char ch = p.charAt(i);
			pMap.put(ch, pMap.getOrDefault(ch, 0) + 1);
		}
		int need = pMap.size();

		Map<Character, Integer> sMap = new HashMap<>();
		int[] res = new int[2];
		int l = 0;
		int have = 0;
		int min_len = Integer.MAX_VALUE;
		for (int i = 0; i < s.length(); i++) {
			int r = i;
			char r_ch = s.charAt(r);
			// only if this r_ch contains in pMap,and should be correct 1 count then count
			// have value
			if (pMap.containsKey(r_ch) && sMap.get(r_ch).equals(pMap.get(r_ch))) {
				have++;
			}

			while (have == need) {
				if (r - l + 1 < min_len) {
					min_len = r - l + 1;
					res[0] = l;
					res[1] = r;
				}
				char l_ch = s.charAt(i);
				if (sMap.containsKey(l_ch) && pMap.get(l_ch) < sMap.get(l_ch)) {
					have--;
				}
				l++;
			}

		}
		
		int left = res[0];
		int right = res[1];

		if (min_len != Integer.MAX_VALUE) {
			return s.substring(left, right + 1);
		} else {
			return "";
		}

	}

	public static void main(String[] args) {
		
		

	}

}
