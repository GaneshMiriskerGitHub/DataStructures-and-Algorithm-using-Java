package package5_BackTracking;

import java.util.ArrayList;

public class PP16_Tug_of_war { // DP
	
	public static void findMinimumInTugOfWar(int[] arr) {
		
		int min_dist = findMinimumInTugOfWarUtil(arr, 0, 0, 0, new ArrayList<>(), new ArrayList<>(), Integer.MAX_VALUE);
		
		System.out.println(min_dist);
		
	}
	
	public static int findMinimumInTugOfWarUtil(int[] arr, int i, int set1Sum, int set2Sum, ArrayList<Integer> set1, ArrayList<Integer> set2, int min_dist) {
		
		if(i==arr.length) {
			if(min_dist > Math.abs(set2Sum-set1Sum)) {
				min_dist = Math.abs(set2Sum-set1Sum);
			}
			return min_dist;
		}
		
		if(set1.size() < ((arr.length+1)/2)) {
			set1.add(arr[i]);
			findMinimumInTugOfWarUtil(arr, i+1, set1Sum+arr[i], set2Sum, set1, set2, min_dist);
			set1.remove(set1.size()-1);
		}
		
		if(set2.size() < ((arr.length+1)/2)) {
			set2.add(arr[i]);
			findMinimumInTugOfWarUtil(arr, i+1, set1Sum, set2Sum+arr[i], set1, set2, min_dist);
			set2.remove(set2.size()-1);
		}
		
		return -1;
		
		
	}

	public static void main(String[] args) {

		int arr[] = { 31,26,33,21,40 };
		
		findMinimumInTugOfWar(arr);
		

	}

}
